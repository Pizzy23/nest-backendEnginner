// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Login {
  id        Int     @id @default(autoincrement())
  uuid      String  @db.VarChar(11)
  is_logged Boolean @default(false)
}

model User {
  id       Int    @id @default(autoincrement())
  uuid     String @db.VarChar(11)
  date     String
  email    String @db.VarChar(255)
  name     String @db.VarChar(100)
  phone    String @db.VarChar(20)
  zip      String @db.VarChar(10)
  nickname String @db.VarChar(50)
  password String @db.VarChar(255)
  creaSP   String @db.VarChar(255)
}

model Art {
  id                                  Int      @id @default(autoincrement())
  responsibleTechnical                String
  contractedCompany                   String
  companyRegistration                 String
  contractor                          String
  contractorCnpjCpf                   String
  contractorAddress                   String
  contractNumber                      String
  contractDate                        DateTime
  contractValue                       Decimal
  contractorType                      String
  vinculation                         String
  institutionalAction                 String
  workServiceAddress                  String
  startDate                           DateTime
  estimatedCompletionDate             DateTime
  coordinates                         String
  purpose                             String
  registrationCode                    String
  owner                               String
  ownerCnpjCpf                        String
  administrativeUnit                  String
  levelOfEngagement                   String
  professionalActivity                String
  workService                         String
  complement                          String
  quantity                            String
  observations                        String?
  arbitrationClause                   Boolean?
  accessibility                       Boolean?
  signaturesValid                     Boolean?
  professionalAndContractorSignatures Boolean?
  vinculationStartDate                DateTime
  vinculationEndDate                  DateTime
  vinculationType                     String
  functionDesignation                 String
  administrativeUnitAddress           String
  generalObservations                 String?
  numberArt                           String
}

enum TipoServico {
  CAT_AtividadeConcluida
  CAT_AtividadeAndamento
  CAT_SemRegistro
  CAT_Complementar
  SubstituicaoCAT_NovoAtestado
  SegundaVia
  CAT_Exterior
}

model Cat {
  id                          Int         @id @default(autoincrement())
  emailNotificacao            String
  tipoServico                 TipoServico
  artNumero                   String
  receberPorEmailCat          Boolean
  emailEnvioCat               String
  periodoCertificadoDe        DateTime
  periodoCertificadoAte       DateTime
  existeContratoSubempreitada Boolean
  informacoesSubempreitada    String
  declaracaoAtestado          String
  execucaoObra                Boolean
  prestacaoServicos           Boolean
  termoResponsabilidade       Boolean
  entregaDocumento            String
  atestadoEmitido             String
  comprovanteVinculo          String?
  outrosDocumentos            String?
  exclusivoExterior           String?
  laudoTecnico                String?
  catNumber                   String
}
